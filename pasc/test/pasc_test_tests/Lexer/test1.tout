1	1	keyword	program
1	8	ident	project1
1	17	sep	;
3	1	ident	uses
3	5	ident	math
3	10	sep	;
5	1	keyword	const
5	6	ident	MaxPrise
5	15	op	=
5	16	integer	1000	1000
5	20	sep	;
6	1	keyword	var
6	4	ident	t
6	6	sep	:
6	8	ident	Text
6	12	sep	;
7	5	ident	ClassCount
7	15	sep	,
7	16	ident	i
7	17	sep	,
7	18	ident	ConditionerCount
7	34	sep	,
7	35	ident	Power
7	40	sep	,
7	41	ident	Prise
7	46	sep	,
7	47	ident	Reply
7	52	sep	:
7	54	ident	Integer
7	62	sep	;
8	5	ident	MinPower
8	13	sep	:
8	15	keyword	Array
8	21	keyword	of
8	24	ident	Integer
8	32	sep	;
9	5	ident	PowerPrise
9	15	sep	:
9	17	keyword	Array
9	23	sep	[
9	25	integer	1	1
9	26	sep	..
9	28	ident	MaxPrise
9	36	sep	]
9	37	keyword	of
9	40	ident	Integer
9	48	sep	;
11	1	keyword	begin
12	3	ident	Reply
12	8	op	:=
12	10	integer	0	0
12	11	sep	;
13	3	keyword	for
13	6	ident	i
13	8	op	:=
13	10	integer	1	1
13	11	keyword	to
13	14	ident	MaxPrise
13	23	keyword	do
14	5	ident	PowerPrise
14	15	sep	[
14	16	ident	i
14	17	sep	]
14	18	op	:=
14	20	ident	MaxPrise
14	28	sep	;
16	3	ident	Assign
16	9	sep	(
16	11	ident	t
16	12	sep	,
16	13	string	'cond.in'	cond.in
16	22	sep	)
16	23	sep	;
17	3	ident	Reset
17	8	sep	(
17	9	ident	t
17	10	sep	)
17	11	sep	;
18	3	ident	Readln
18	9	sep	(
18	11	ident	t
18	12	sep	,
18	13	ident	ClassCount
18	23	sep	)
18	24	sep	;
19	3	ident	SetLength
19	12	sep	(
19	13	ident	MinPower
19	21	sep	,
19	22	ident	ClassCount
19	32	sep	)
19	33	sep	;
20	3	keyword	For
20	6	ident	i
20	8	op	:=
20	10	integer	0	0
20	11	keyword	to
20	14	ident	High
20	19	sep	(
20	20	ident	MinPower
20	28	sep	)
20	29	keyword	do
21	5	ident	Read
21	9	sep	(
21	10	ident	t
21	11	sep	,
21	12	ident	MinPower
21	20	sep	[
21	21	ident	i
21	22	sep	]
21	23	sep	)
21	24	sep	;
22	3	ident	ReadLn
22	9	sep	(
22	11	ident	t
22	12	sep	)
22	13	sep	;
23	3	ident	Readln
23	9	sep	(
23	11	ident	t
23	12	sep	,
23	13	ident	ConditionerCount
23	29	sep	)
23	30	sep	;
24	3	keyword	For
24	6	ident	i
24	8	op	:=
24	10	integer	1	1
24	11	keyword	to
24	14	ident	ConditionerCount
24	31	keyword	do
24	34	keyword	Begin
25	5	ident	Read
25	9	sep	(
25	10	ident	t
25	11	sep	,
25	12	ident	Power
25	17	sep	)
25	18	sep	;
26	5	ident	Readln
26	11	sep	(
26	12	ident	t
26	13	sep	,
26	14	ident	Prise
26	19	sep	)
26	20	sep	;
27	5	keyword	if
27	7	ident	PowerPrise
27	18	sep	[
27	19	ident	Power
27	24	sep	]
27	25	op	>
27	26	ident	Prise
27	31	keyword	then
28	7	ident	PowerPrise
28	17	sep	[
28	18	ident	Power
28	23	sep	]
28	24	op	:=
28	26	ident	Prise
28	31	sep	;
29	3	keyword	End
29	6	sep	;
30	3	ident	Close
30	8	sep	(
30	9	ident	t
30	10	sep	)
30	11	sep	;
32	3	keyword	For
32	6	ident	i
32	8	op	:=
32	10	ident	MaxPrise
32	18	op	-
32	19	integer	1	1
32	20	keyword	downto
32	27	integer	1	1
32	29	keyword	do
32	32	keyword	Begin
33	5	ident	PowerPrise
33	15	sep	[
33	16	ident	i
33	17	sep	]
33	18	op	:=
33	20	ident	min
33	23	sep	(
33	24	ident	PowerPrise
33	34	sep	[
33	35	ident	i
33	36	op	+
33	37	integer	1	1
33	38	sep	]
33	39	sep	,
33	40	ident	PowerPrise
33	50	sep	[
33	51	ident	i
33	52	sep	]
33	53	sep	)
33	54	sep	;
34	3	keyword	End
34	6	sep	;
35	3	keyword	For
35	6	ident	i
35	8	op	:=
35	10	integer	0	0
35	11	keyword	to
35	14	ident	High
35	19	sep	(
35	20	ident	MinPower
35	28	sep	)
35	29	keyword	do
35	32	keyword	Begin
36	5	ident	Reply
36	10	op	+=
36	12	ident	PowerPrise
36	22	sep	[
36	23	ident	MinPower
36	31	sep	[
36	32	ident	i
36	33	sep	]
36	34	sep	]
36	35	sep	;
37	3	keyword	End
37	6	sep	;
38	3	ident	Assign
38	9	sep	(
38	10	ident	t
38	11	sep	,
38	12	string	'cond.out'	cond.out
38	22	sep	)
38	23	sep	;
39	3	ident	Rewrite
39	10	sep	(
39	11	ident	t
39	12	sep	)
39	13	sep	;
40	3	ident	WriteLn
40	10	sep	(
40	11	ident	t
40	12	sep	,
40	13	ident	Reply
40	18	sep	)
40	19	sep	;
41	3	ident	Close
41	8	sep	(
41	9	ident	t
41	10	sep	)
41	11	sep	;
42	1	keyword	End
42	4	sep	.
